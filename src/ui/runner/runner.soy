/**
 * @fileoverview Preview for Coding in Chrome editor.
 *
 * @license Copyright 2015 The Coding with Chrome Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author mbordihn@google.com (Markus Bordihn)
 */
{namespace cwc.soy.Runner autoescape="strict"}



/**
 * Main HTML template for the file library.
 */
{template .template}
  {@param prefix: string}
  <div id="{$prefix}body">
    {call .toolbar_ data="all" /}
    <div id="{$prefix}content">
      <div id="{$prefix}info"></div>
      <div id="{$prefix}status"></div>
      <div id="{$prefix}statusbar"></div>
      <div id="{$prefix}overlay"></div>
      <div id="{$prefix}turtle"></div>
      <div id="{$prefix}terminal"></div>
      <div id="{$prefix}runtime" class="hide"></div>
    </div>
    <footer id="{$prefix}infobar" class="mdl-layout__header"></footer>
    <div id="{$prefix}monitor"></div>
  </div>
{/template}


/**
 * Toolbar template.
 */
{template .toolbar_}
  {@param prefix: string}

  {let $toolbarPrefix: $prefix + 'toolbar-' /}
  <header id="{$toolbarPrefix}chrome" class="mdl-layout__header bg_10_pct_black">
    <div class="mdl-layout__header-row">
      <nav class="mdl-navigation">

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'run' /}
          {param icon: 'play_arrow' /}
          {param opt_title: 'Runs the code and update preview.' /}
        {/call}

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'stop' /}
          {param icon: 'stop' /}
          {param opt_title: 'Stops or terminate the preview.' /}
        {/call}

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'reload' /}
          {param icon: 'refresh' /}
          {param opt_title: 'Reloads preview.' /}
        {/call}

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'refresh' /}
          {param icon: 'refresh' /}
          {param opt_title: 'Refresh preview.' /}
        {/call}

      </nav>
      <div class="mdl-layout-spacer"></div>
      <nav class="mdl-navigation">

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'expand' /}
          {param icon: 'fullscreen' /}
          {param opt_title: 'Expand Blockly editor.' /}
        {/call}

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'expand-exit' /}
          {param icon: 'fullscreen_exit' /}
          {param opt_title: 'Collapse Blockly editor.' /}
        {/call}

        {call .navigationIcon_}
          {param prefix: $toolbarPrefix /}
          {param id: 'info' /}
          {param icon: 'info_outline' /}
          {param opt_title: 'Shows general information …' /}
        {/call}

      </nav>
    </div>
  </header>

{/template}


/**
 * Navigation link button.
 */
{template .navigationIcon_}
  {@param prefix: string}
  {@param id: string}
  {@param icon: string}
  {@param? opt_title: string}

  <span class="mdl-navigation__link">
    <button id="{$prefix}{$id}"
            class="mdl-button mdl-js-button mdl-button--icon"
            {if $opt_title}title="{msg desc=""}{$opt_title}{/msg}"{/if}>
      <i class="material-icons">{$icon}</i>
    </button>
  </span>

{/template}


/**
 * Connect template.
 */
{template .connect}
  <h2>Connected …</h2>
{/template}


/**
 * Disconnect template.
 */
{template .disconnect}
  <h2>Disconnected …</h2>
{/template}


/**
 * Prepare template.
 */
{template .prepare}
  <h2>Preparing Code …</h2>
{/template}


/**
 * Run template.
 */
{template .run}
  <h2>Running Code …</h2>
{/template}


/**
 * Reload template.
 */
{template .reload}
  <h2>Reloading Code …</h2>
{/template}


/**
 * Stop template.
 */
{template .stop}
  <h2>Stopping the running Code</h2>
{/template}


/**
 * Terminate template.
 */
{template .terminate}
  <h2>Terminating the running Code</h2>
{/template}
